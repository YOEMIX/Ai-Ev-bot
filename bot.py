import asyncio
import logging
import os
from aiogram import Bot, Router, Dispatcher, types
from aiogram.filters import Command
from aiogram.handlers import MessageHandler
from config import BOT_TOKEN
from utils import process_message


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, parse_mode="Markdown")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher()
dp.bot = bot
dp.include_router(router)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞)
image_path = os.path.join('images', 'Default_A_serene_cityscape_at_dawn_the_calm_before_the_storm_0.jpg')

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ InputFile
photo = types.FSInputFile(image_path)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command('start'))
async def send_welcome(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏
    await bot.send_photo(
        chat_id=message.chat.id,
        photo=photo,
        caption="–ü—Ä–∏–≤–µ—Çüëã, –Ø –ò–ò –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ —É–ª—É—á—à–∏—Ç—å —Å–∫–∏–ª—ã –∏ –∑–Ω–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤—ã–∏–≥—Ä–∞—Ç—å –¥–µ–±–∞—Ç—ãüöÄ –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä —Å–æ –º–Ω–æ–π –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Çüòá \n –£–¥–∞—á–∏ !",
        reply_markup=types.InlineKeyboardMarkup(
            inline_keyboard=[[
                types.InlineKeyboardButton(
                    text="–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ",
                    url="https://youtu.be/ph1EFkuCmyo?si=vLho92dJKMknhigx"
                )
            ]]
        )
    )


    # –ß–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º
    await asyncio.sleep(60)
    await bot.send_message(
        chat_id=message.chat.id,
        text=""
    )
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message()
async def handle_message(message: types.Message):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenAI API
       response = process_message(message)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
       await message.answer(response)

if __name__ == '__main__':
    from database import create_table
    create_table()

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logging.basicConfig(level=logging.INFO)
    asyncio.run(dp.start_polling(bot))
